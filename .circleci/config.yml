version: 2.1 # Use 2.1 to enable using orbs and other features.

# Declare the orbs that we'll use in our config.
# read more about orbs: https://circleci.com/docs/2.0/orb-intro/
orbs:
  aws-cli: circleci/aws-cli@3.1.1
  node: circleci/node@5.1.0
  aws-ecr: circleci/aws-ecr@8.1.2
  aws-ecs: circleci/aws-ecs@2.3.0

jobs:
  check-build:
    docker:
      - image: cimg/node:18.18.0
    environment:
      NODE_ENV: production
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn
          app-dir: ~/project
          cache-version: v8
      - run:
          name: Test ability to build
          command: cd ~/project && yarn build

  check-lint:
    docker:
      - image: cimg/node:18.18.0
    environment:
      NODE_ENV: development
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn
          app-dir: ~/project
          cache-version: v8
      - run:
          name: Test linting
          command: cd ~/project && yarn lint

  specs:
    docker:
      - image: cimg/redis:6.2.6
      - image: cimg/postgres:13.9
        environment: # add POSTGRES environment variables.
          POSTGRES_USER: dream
          POSTGRES_DB: dream_core_test
          POSTGRES_PASSWORD: ''
    environment:
      NODE_ENV: test
      PORT: 7778
      DB_USER: dream
      PRIMARY_DB_NAME: dream_core_test
      PRIMARY_DB_HOST: localhost
      DB_PORT: 5432
      TZ: UTC

    steps:
      # - run:
      #   name: 'Install postgres client so we can build the pg gem'
      #   command: |
      #     apt-get update -qq && apt-get install -y nodejs postgresql-client
      - checkout
      - node/install:
          install-yarn: true
          node-version: '18.18.0'
      - node/install-packages:
          pkg-manager: yarn
          app-dir: ~/project
          cache-version: v2
      # Here we make sure that the secondary container boots
      # up before we run operations on the database.
      - run:
          name: 'Wait for DB'
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: 'Database migrate'
          command: cd ~/project && APP_ROOT_PATH=$(pwd) yarn dreamcore db:migrate
      - run:
          name: 'Run unit specs'
          command: cd ~/project && APP_ROOT_PATH=$(pwd) yarn spec

workflows:
  test:
    jobs:
      - specs:
          context: github-packages
      - check-build:
          context: github-packages
      - check-lint:
          context: github-packages
