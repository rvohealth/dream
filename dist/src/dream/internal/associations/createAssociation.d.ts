import Dream from '../../../dream';
import DreamTransaction from '../../transaction';
import { UpdateableAssociationProperties } from '../../types';
export default function createAssociation<DreamInstance extends Dream, Schema extends DreamInstance['schema'], AssociationName extends keyof Schema[DreamInstance['table']]['associations' & keyof Schema[DreamInstance['table']]], PossibleArrayAssociationType = DreamInstance[AssociationName & keyof DreamInstance], AssociationType = PossibleArrayAssociationType extends (infer ElementType)[] ? ElementType & typeof Dream : PossibleArrayAssociationType & typeof Dream, RestrictedAssociationType extends AssociationType extends Dream ? AssociationType : never = AssociationType extends Dream ? AssociationType : never>(dream: DreamInstance, txn: DreamTransaction<Dream, any> | null | undefined, associationName: AssociationName, opts?: UpdateableAssociationProperties<DreamInstance, RestrictedAssociationType>): Promise<NonNullable<AssociationType>>;
